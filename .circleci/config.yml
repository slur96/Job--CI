version: 2.1

jobs:
  install_dependencies:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: 
          name: Install NPM dependencies
          command: npm install
  sonarcloud_analysis:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: 
          name: Install & Run SonarScanner Analysis
          command: |
            export SONAR_SCANNER_VERSION=6.2.1.4610
            export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux-x64
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux-x64.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            export PATH=$SONAR_SCANNER_HOME/bin:$PATH
            export SONAR_SCANNER_OPTS="-server"
            ls $SONAR_SCANNER_HOME/bin #Check if sonar-scanner binary is present here
            sonar-scanner -Dsonar.organization=gitlab-proj -Dsonar.projectKey=job-Ic -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

  build_scan_and_push_docker_image: 
   docker:
     - image: docker:20.10.7
   steps:
     - setup_remote_docker:
         docker_layer_caching: false
     - checkout
     - run: 
        name: Build Docker Image
        command: docker build -t $DOCKERHUB_USR/circle-ci:v1.0.1 .
     - run:
        name: Trivy Scan
        command: |
         docker pull aquasec/trivy:latest
         sleep 60
         docker run --rm -v /var/run/docker.sock aquasec/trivy:latest --severity HIGH,CRITICAL image $DOCKERHUB_USR/circle-ci:v1.0.1

     - run: 
        name: Checking images locally
        command: docker images
     - run: 
        name: Push Docker Image
        command: |
           echo $DOCKER_PAT | docker login -u $DOCKERHUB_USR --password-stdin
           docker push $DOCKERHUB_USR/circle-ci:v1.0.1
  
  deploy_to_eks_cluster:
    docker: 
      - image: cimg/python:3.10.2
    steps:
      - setup_remote_docker:
           docker_layer_caching: true
      - checkout
      - run: 
         name: Install Kubectl
         command: |
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
            chmod +x ./kubectl 
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run: 
         name: Install AWS CLI 
         command: |
           pip3 install awscli --upgrade
           aws --version

      - run: 
         name: Update kubeconfig for EKS deploy_to_eks_cluster
         command: |
          aws eks update-kubeconfig --region $AWS_REGION --name samuel-eks-cluster

      - run:
         name: Deploy to Kubernetes
         command: |
            kubectl apply -f k8s-manifests/deployment.yaml
            kubectl apply -f k8s-manifests/service.yaml

      - run: 
         name: Verify Deployment
         command: |
           kubectl rollout status deployment/actions-app-deployment -n default
           kubectl rollout status service/actions-app-service -n default




workflows:
  version: 2
  deploy_workflow:
    jobs:
      - install_dependencies 
      - sonarcloud_analysis: 
          requires:
            - install_dependencies 
      - build_scan_and_push_docker_image
      - deploy_to_eks_cluster:
          requires:
            - build_scan_and_push_docker_image

      